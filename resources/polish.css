colors {
	bgColor:  					rgb(0,10,25);
	brightBgColor:  			rgb(0,25,50);
	hiddenBrightBgColor:  		rgb(100,125,150);
	evenBrightColor: 			rgb(10,45,65);
	eevenBrightColor: 			rgb(40,70,95);
	translucentBgColor:  		argb(130, 165,190,247);
	darkTranslucentBgColor: 	argb(100, 145,175,247);
	/* Font Colors*/
	titleFontColor: 			rgb(175,210,247);
	fontColor: 					rgb( 66, 85,148);
	hiddenFontColor: 			rgb(166,185,248);
	brightFontColor: 			white; 
	translucentFontColor:  		argb(130, 165,190,247);
	translucentBrightFontColor: argb(150, 175,210,247);
	
	maskColor: 					red;
	splitTop: 					brightBgColor;
	splitBot: 					bgColor;
}

backgrounds {
	snowflakes {
		type: snowflakes;
		color: transparent;
		flake-color: white;
	}
	titleGradient {
		type: vertical-gradient;
		top-color: splitTop;
		bottom-color: splitBot;
	}
	tableSelection {
		color: #ffc;
	}
	alertTop {
		type: round-rect;
		color: #fff;
	}
	alertBg {
		type: round-rect;
		color: #a333;
	}
	alertOverlay {
		color: #9fff;
	}
	percentageText {
		type: text;
		text: 0%;
		text-style: textPercentage;
		anchor: right;
		color: transparent;
		x-offset: -1;
		y-offset: 0;
	}
	plainBg {
		color: brightBgColor;
	}
	selectedBg {
		type: round-rect;
		arc: 8;
		color: brightBgColor;
		border-color: fontColor;
		border-width: 2;
	}
}


/**
  * The title style is a predefined style which is used
  * for all screen-titles.
  */
title {
	max-width: 0%;
	padding: 2;
	font-face: proportional;
	font-size: normal;
	font-style: bold;
	font-color: titleFontColor;
	border: none;
	layout: horizontal-center | horizontal-expand;
	background: titleGradient;
}

.behindTitle extends title {
	min-width: 0%;
	max-width: 100%;
}


label {
	background {
		color: brightBgColor;
	}
	font {
		style: bold;
		color: fontColor;
		size: small;
	}
	layout: center | expand;	
}

.labelHold extends label {
	background {
		type: horizontal-gradient;
		left-color: eevenBrightColor;
		right-color: brightBgColor;
		start: 0%;
		end: 100%;
	}	
}

.hiddenLabel extends label {
	padding: 5;
	background {
		color: hiddenBrightBgColor;
	}
	font {
		style: bold;
		color: hiddenFontColor;
		size: small;
	}
	layout: expand | center;
}

/**
  * The focused style is a predefined style which
  * is used by lists, forms, choice-groups and so on.
  * This style will be used for highlighting the currently
  * focused item.
  */
focused {
	padding: 5;
	background: selectedBg;
	font {
		style: bold;
		color: translucentBrightFontColor;
		size: small;
	}
	layout: expand | center;
}

.mainScreen {
	title-menu: true;
	padding: 2;
	padding-left: 10;
	padding-right: 10;
	layout: horizontal-expand | horizontal-center | vertical-center;
	font-color: translucentFontColor;
	background {
		type: vertical-gradient;
		top-color: splitTop;
		bottom-color: splitBot;
	}
	choice-color: eevenBrightColor;
}

.behindScreen extends mainScreen {
	title-menu: false;
	title-style: behindTitle;
}

.mainPopupScreen {
	repaint-previous-screen: false;
	padding: 2;
	padding-left: 10;
	padding-right: 10;
	font-color: translucentFontColor;
	background {
		type: vertical-gradient;
		top-color: splitTop;
		bottom-color: splitBot;
	}
	layout: horizontal-center | bottom | horizontal-shrink | vertical-shrink | newline-after;
	
}

listItem {
	font {
		style: bold;
		color: fontColor;
		size: small;
	}
	layout: expand | center;
}

/**
  * The .mainCommand style is also a static style, which
  * is set in the MIDlet source-code with the //#style directive.
  * If the source-code would not have defined this
  * style, we could use the dynamic style "listitem" to design all
  * items on the list-screens. 
  */
.mainCommand {
	padding: 0;
	padding-vertical: 8;
	layout: center | vertical-center | newline-after;
	min-height: 30%;
	//#if polish.android
		font-size: medium;
	//#else
		font-size: small;
	//#endif
}

.mainCommand:hover {
	font-style: bold;
	font-color: fontColor;
	text-effect: shadow;
}

.mainCommand:pressed {
	background-color: bgColor;
	font-color: fontColor;
	view-type: particle;
}


.mainItem {
	font-color: translucentBrightFontColor;
	font-size: small;
}

alertcontent {
	font-color: fontColor;
	//#if polish.android
		font-size: medium;
	//#else
		font-size: small;
	//#endif
	font-style: bold;
	text-effect: shadow;
}

.messageAlertTitle {
	padding-top: 20px;
	font-color: fontColor;
	font-style: bold;
	font-size: normal;
}

.messageAlertMenuBar {
	background-color: fontColor;
}

.messageAlert {
	padding: 20px;
	padding-top: 1px;
	view-type: none;
	layout: horizontal-shrink | vertical-shrink | horizontal-center | vertical-center;
	background {
		type: layer;
		layers: alertTop, alertBg;
		margins: 10px, 0px;
	}
	repaint-previous-screen: true;
	overlay-background: alertOverlay;
	title-style: messageAlertTitle;
	menubar-style: messageAlertMenuBar;
	//#if polish.midp2
		screen-change-animation: fade;
	//#else
		screen-change-animation: right;
	//#endif
}

info {
	margin: 1;
	font-color: fontColor;
	layout: left;
}

/*************   MENU BAR     *************/

menubar {
	margin: 0;
	padding-top: 3;
	padding: 2;
	/*menubar-color: bgColor;*/
	font-color: translucentFontColor;
	background {
		type: vertical-gradient;
		top-color: bgColor;
		bottom-color: brightBgColor;
		start: 10%;
		end: 100%;
	}
}

/**
 * Commands within the menubar on the left side
 */
leftcommand {
	margin: 0;
	min-width: 40%; /* 40% of 50% maximum width results in 20% of screen width */
	max-width: 80%;
    //#if polish.key.MiddleSoftKey:defined or polish.MenuBar.useMiddleCommand
    	/* the middle command is used, so lower the left and right commands relatively */
		padding-top: 7;
	//#endif
	padding-bottom: 0;
	font-color: translucentFontColor;
	font-style: plain;
	//#if polish.android
		font-size: medium;
	//#else
		font-size: small;
	//#endif
}
rightcommand extends leftcommand {
	layout: right;
}
middlecommand extends leftcommand {
	layout: center;
	padding-top: 1;
	font-style: bold;
}

/**
  * the menu style is a predefined style for
  * designing the fullscreen-menu.
  * The font-settings (font-color,
  * font-face, font-style and font-size)
  * are used to design the menu-texts
  * (like Options, Select, or Cancel).
  * With the focused-style attribute
  * another style than the default "focused"
  * style is used for the menu. 
  */
menu {
	margin-left: 2;
	margin-bottom: 4;
	padding: 2;
	background {
		type: round-rect;
		color: brightBgColor;
		border-width: 2;
		border-color: translucentBgColor;
	}
	font-color: translucentFontColor;
	font-style: bold;
	view-type: slide-up;
}
menu1 extends menu {
	background {
		color: evenBrightColor;
	}
}

/**
  * The menuItem style is a predefined style
  * for the actual commands in a fullscreen-menu.
  * When the menuItem style is not defined,
  * the menu style will be used instead. 
  */
menuItem {
	margin-top: 2;
	padding: 2;
	padding-left: 5;
	font {
		color: translucentFontColor;
		size: medium;
		style: bold;
	}
	layout: left;
}

/**
  * A focused menuItem
  */
menuItem:hover {
	background-color: eevenBrightColor;
	font-color: translucentFontColor;
	layout: left | horizontal-expand;
}

.filterCards {
	title-menu: true;
	padding: 3;
	padding-left: 5;
	padding-vertical: 1;
	include-label: true;
	layout: left | expand;
	font-color: translucentFontColor;
	repaint-previous-screen: false;
	/** style of the filter-textfield of a FilteredList/FilteredChoiceGroup */
	filter-style: filterTextFieldStyle;
	/** style of the popup screen for a FileredChoiceGroup */
	popup-style: filterPopupStyle;
	background {
		type: round-rect;
		color: darkTranslucentBgColor;
	}
	choice-color: translucentBgColor;
}

.filterCards:hover {
	background-color: translucentBgColor;
	font-color: translucentBrightFontColor;
	layout: left | expand;	
}

.filterTextFieldStyle {
	margin-left: 2;
	margin-right: 2;
	font-color: translucentBrightFontColor;
	background {
		color: bgColor;
		border-color: black;
	}
	layout: expand | left;
}

.inputTextField {
	padding: 5;
	font-color: translucentBrightFontColor;
	background-color: bgColor;
	layout: expand | left;
}

.filterPopupStyle {
	repaint-previous-screen: false;
	margin: 10;
	margin-bottom: 0;
	padding: 5;
	font-color: translucentBrightFontColor;
	background-color: bgColor;
}

.defaultTable {
	padding: 0;
	padding-vertical: 0;
	padding-horizontal: 6;
	font-color: translucentFontColor;
	font-size: small;
	table-selected-background: tableSelection;
	table-line-color: eevenBrightColor;
	background {
		type: round-rect;
		color: brightBgColor;
		anchor: center;
	}
	layout: expand | center | vshrink;
}

.defaultTable:hover {
	padding: 0;
	padding-vertical: 0;
	padding-horizontal: 6;
	border {
		type: round-rect;
		width: 2;
		color: translucentBgColor;
	}
	background {
		color: bgColor;
	}
}

.tableHeading {
	font-color: translucentFontColor;
	font-style: bold;
	//#if polish.android
		font-size: medium;
	//#else
		font-size: small;
	//#endif
	table {
		line-color: evenBrightColor;
	}
}

.tableHeading:hover {
	background {
		color: bgColor;
	}
}

.tableCell extends tableHeading {
	font-style: plain;
	font-size: small;
}

.tableCell:hover {
	background {
		color: evenBrightColor;
	}
}

.tableCellHold extends tableCell {
	background {
		type: horizontal-gradient;
		left-color: hiddenBrightBgColor;
		right-color: evenBrightColor;
		start: 0%;
		end: 100%;
	}
}

.tableCellCentered extends tableCell {
	layout: center;
	background {
		type: radial-gradient;
		outer-color: #a98934;
		inner-color: #e9d363;
	}
}

.tableBoolean {
	padding: 2px;
	include-label: true;
	background {
		type: round-rect;
		color: silver;
	}
}

/**************
 *
 * Tabbed pane 
 *
 **************/

.tabbedPane {
	title-menu: true;
}

.tabbedPaneIcons {
	view-type: horizontal;
	background {
		type: vertical-gradient;
		top-color: bgColor;
		bottom-color: brightBgColor;
	}
	border {
		top-width: 1;
		color: translucentBgColor;
	}
	layout: expand;
}

.tabIcon {
	margin: 1px;
	padding: 2px;
	max-width: 33.3%;
	layout: expand | center | vertical-center;
	font-size: small;
	font-color: fontColor;
}

.tabIcon:hover {
	padding: 1px;
	background {
		type: round-rect;
		arc: 8;
		color: evenBrightColor;
	}
	border {
		type: round-rect;
		arc: 8;
		color: translucentBgColor;
	}
	font-color: titleFontColor;
}

.tabIcon:landscape {
	text-visible: false;
}

.tabIcon:landscape:hover {
	padding: 1px;
	background {
		type: round-rect;
		arc: 8;
		color: brightBgColor;
	}
	border {
		type: round-rect;
		arc: 8;
		color: translucentBgColor;
	}
	font-color: titleFontColor;
}



/* Calendar */
.calendar {
	layout: expand;
	label-style: calendarMonth;
}

.calendar:hover {
}

.calendarMonth {
	font-color: #222;
	font-style: bold;
	font-size: small;
	before: url( arrow-left.png );
	after: url( arrow-right.png );
	layout: expand | center;
}

.calendarWeekday {
	layout: center;
	font-style: italic | bold;
	min-width: 12%;
}

.calendarDay {
	padding: 2px;
	font-style: italic;
	font-color: #222;
	layout: right;
}

.calendarDay:hover {
	background-color: #222;
	font-color: #efefef;
}

.calendarCurrentday extends .calendarDay {
	background-color: #8f8;
}

.calendarCurrentday:hover {
	background-color: #1a1;
	font-color: #fff;
}

.calendarDayInactive extends .calendarDay {
	font-color: #666;
}

.calendarDayInactive:hover {
	background-color: #666;
	font-color: #fff;
}

/**
 * Blackmarket ticker
 */
.mainTicker {
	ticker-step: 4;
	padding-horizontal: 5;
	layout: vertical-center;
	font-color: translucentBrightFontColor;
	font-size: small;
	text-effect: shadow;
	text-shadow-color: translucentFontColor;
}

/**
 * The Gauge
 */
.formGauge extends mainScreen {
	title-menu: false;
	padding-left: 5;
	padding-right: 5;
	font-size: large;
}

.loadingGauge {
	/*view-type: gauge-horizontal-icons;
	gauge-horizontal-icons-count: 10;
	gauge-horizontal-icons-image: url( trea1.png );
	gauge-horizontal-icons-highlight-image: url( trea3.png );
	gauge-horizontal-icons-highlight-center-image: url( trea6.png );
	gauge-horizontal-icons-highlight-count: 3;
	gauge-horizontal-icons-interval: 75;*/
	gauge-background-color: bgColor;
	gauge-animation-mode: leftright;
	gauge-gap-color: hiddenBrightBgColor;
	gauge-color: eevenBrightColor;
	background-anchor: h-center | v-center;
	background: selectedBg;
	label-style: labelLoadingGauge;
	layout: horizontal-center | horizontal-expand;
}
.labelLoadingGauge extends label {
	font-size: large;
}
.inputGauge extends loadingGauge {
	label-style: labelGauge;
}

.labelGauge extends label {
	font-size: medium;
}

	